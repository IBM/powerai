From 8a7302d16e3ae55a9b5b7771c782f3d6002511f8 Mon Sep 17 00:00:00 2001
From: Steven Liu <hudeven@gmail.com>
Date: Mon, 26 Aug 2019 12:26:59 -0700
Subject: [PATCH] Use torch.equal() instead of "=="

1. "==" is equivalent to torch.eq() which returns multi-dimensional Tensor and causes "RuntimeError: bool value of Tensor with more than one value is ambiguous" https://github.com/facebookresearch/pytext/issues/934
2. torch.equal(): returns True if two tensors have the same size and elements, False otherwise.
---
 pytext/docs/source/tensorizer.rst | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/pytext/docs/source/tensorizer.rst b/pytext/docs/source/tensorizer.rst
index d44ccab3..7e34bdae 100644
--- a/pytext/docs/source/tensorizer.rst
+++ b/pytext/docs/source/tensorizer.rst
@@ -148,5 +148,5 @@ We can test our tensorizer with the following code that initializes the vocab, t
     numberized_rows = (tensorizer.numberize(r) for r in rows)
     words_tensors, seq_len_tensors = tensorizer.tensorize(numberized_rows))
     # Notice the padding (1) of the 2nd tensor to match the dimension
-    assert words_tensors == tensor([[2, 3, 4, 5], [6, 7, 8, 1]])
-    assert seq_len_tensors == tensor([4, 3])
+    assert words_tensors.equal(torch.tensor([[2, 3, 4, 5], [6, 7, 8, 1]]))
+    assert seq_len_tensors.equal(torch.tensor([4, 3]))
